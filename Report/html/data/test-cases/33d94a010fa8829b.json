{
  "uid" : "33d94a010fa8829b",
  "name" : "test_getusermenu_01",
  "fullName" : "Testcase.test_getusermenu.TestGetUserMenu#test_getusermenu_01",
  "historyId" : "333ee5e98c97e14067fde68f99aeb04e",
  "time" : {
    "start" : 1571817642763,
    "stop" : 1571817643167,
    "duration" : 404
  },
  "description" : "\n            用例描述：systemId、terminalType正常\n        ",
  "descriptionHtml" : "<pre><code>        用例描述：systemId、terminalType正常\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: string indices must be integers",
  "statusTrace" : "self = <test_getusermenu.TestGetUserMenu object at 0x1041604a8>, action = 'base'\n\n    @allure.feature('GetUserMenu')\n    @allure.severity('blocker')\n    @allure.story('GetUserMenu')\n    def test_getusermenu_01(self, action):\n        \"\"\"\n            用例描述：systemId、terminalType正常\n        \"\"\"\n        conf = Config()\n        data = GetUserMenu()\n        test = Assert.Assertions()\n>       request = Request.Request(action)\n\nTestcase/test_getusermenu.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nCommon/Request.py:18: in __init__\n    self.get_token = self.token.get_token(env)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Common.Token.Token object at 0x10417a048>, env = 'base'\n\n    def get_token(self, env):\n        \"\"\"\n        获取token\n        :param env: 环境变量\n        :return:\n        \"\"\"\n        headers = {\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n    \n        if env == 'base':\n            login_url = 'http://' + self.config.host_base + self.config.loginHost_base\n            parm = self.config.loginInfo_base\n            # print(login_url)\n    \n            response = requests.post(login_url, parm, headers=headers)\n            result = response.json()\n>           token_base = result[\"result\"][\"token\"]\nE           TypeError: string indices must be integers\n\nCommon/Token.py:33: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "action",
    "time" : {
      "start" : 1571817642760,
      "stop" : 1571817642760,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n            用例描述：systemId、terminalType正常\n        ",
    "status" : "broken",
    "statusMessage" : "TypeError: string indices must be integers",
    "statusTrace" : "self = <test_getusermenu.TestGetUserMenu object at 0x1041604a8>, action = 'base'\n\n    @allure.feature('GetUserMenu')\n    @allure.severity('blocker')\n    @allure.story('GetUserMenu')\n    def test_getusermenu_01(self, action):\n        \"\"\"\n            用例描述：systemId、terminalType正常\n        \"\"\"\n        conf = Config()\n        data = GetUserMenu()\n        test = Assert.Assertions()\n>       request = Request.Request(action)\n\nTestcase/test_getusermenu.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nCommon/Request.py:18: in __init__\n    self.get_token = self.token.get_token(env)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Common.Token.Token object at 0x10417a048>, env = 'base'\n\n    def get_token(self, env):\n        \"\"\"\n        获取token\n        :param env: 环境变量\n        :return:\n        \"\"\"\n        headers = {\n            'Content-Type': 'application/json;charset=UTF-8'\n        }\n    \n        if env == 'base':\n            login_url = 'http://' + self.config.host_base + self.config.loginHost_base\n            parm = self.config.loginInfo_base\n            # print(login_url)\n    \n            response = requests.post(login_url, parm, headers=headers)\n            result = response.json()\n>           token_base = result[\"result\"][\"token\"]\nE           TypeError: string indices must be integers\n\nCommon/Token.py:33: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a7907a6011fb1804",
      "name" : "log",
      "source" : "a7907a6011fb1804.txt",
      "type" : "text/plain",
      "size" : 198
    }, {
      "uid" : "a16a3802eca82c35",
      "name" : "stdout",
      "source" : "a16a3802eca82c35.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "2df0d97d114f690e",
      "name" : "stderr",
      "source" : "2df0d97d114f690e.txt",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "story",
    "value" : "GetUserMenu"
  }, {
    "name" : "feature",
    "value" : "GetUserMenu"
  }, {
    "name" : "parentSuite",
    "value" : "Testcase"
  }, {
    "name" : "suite",
    "value" : "test_getusermenu"
  }, {
    "name" : "subSuite",
    "value" : "TestGetUserMenu"
  }, {
    "name" : "host",
    "value" : "MateBook.local"
  }, {
    "name" : "thread",
    "value" : "6080-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Testcase.test_getusermenu"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "33d94a010fa8829b.json",
  "parameterValues" : [ ]
}